#############################################
#
# Log4J 配置文件
#
#############################################

# 定义缺省的日志级别和输出对象
#log4j.rootLogger=WARN,stdout,localLogfile
log4j.rootLogger=INFO,stdout


#log4j.logger.org=INFO,localLogfile
#log4j.logger.com=INFO,localLogfile
#log4j.logger.java=INFO,localLogfile

# 设定控制台输出模式
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{MM/dd HH:mm:ss.SSS}] [%-3p] %c{1}:%x %m%n

# 针对package定义日志级别
#log4j.logger.org.apache=WARN
##log4j.additivity.org.amn=false 标示org.amn的输出只在自己定义的输出文件
log4j.logger.org.young=DEBUG
#log4j.logger.com.dc=WARN
#log4j.logger.com.dcfs=WARN
#log4j.logger.com.iflex=DEBUG

# 设定日志文件的输出模式
log4j.appender.localLogfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.localLogfile.DatePattern=yyyyMMdd
# ${nbc.log.home}通过参数-D指定，比如启动WebLogic时加入参数-Dnbc.log.home=c:/
log4j.appender.localLogfile.File=D:/work/j2eeproject/isocket/log/sys.log
log4j.appender.localLogfile.layout=org.apache.log4j.PatternLayout
log4j.appender.localLogfile.layout.ConversionPattern=%d{MM/dd HH:mm:ss.SSS} [%-3p] %c{1}:%x %m%n


##java.util.logging
#### Configuration File ####
# Global Params
# Handlers installed for the root logger
handlers= java.util.logging.ConsoleHandler java.util.logging.FileHandler
# Level for root logger—is used by any logger 
# that does not have its level set
java.util.logging.FileHandler.level= INFO
# Initialization class—the public default constructor 
# of this class is called by the Logging framework
#config = ConfigureLogging

# Configure FileHandler
# Logging file name - %u specifies unique
java.util.logging.FileHandler.pattern = D:/work/j2eeproject/isocket/log/grizzly%g.log
# Write 100000 bytes before rotating this file
java.util.logging.FileHandler.limit = 100*1024*1024
# Number of rotating files to be used
java.util.logging.FileHandler.count = 10
# Formatter to be used with this FileHandler
java.util.logging.FileHandler.formatter =   java.util.logging.SimpleFormatter

# Configure ConsoleHandler
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Set Logger Levels #
com.level=SEVERE
com.bruceeckel.level = FINEST
com.bruceeckel.util.level = INFO
com.bruceeckel.test.level = FINER
random.level= SEVERE




